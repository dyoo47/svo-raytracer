#version 430 core
layout(binding = 0, rgba8) uniform image2D framebufferImage;
layout(binding = 2, r32f) uniform image2D beambufferImage;
layout(std430, binding = 7) readonly buffer shaderStorage{
  uint[] octreeBuffer;
};

layout(local_size_x = 8, local_size_y = 8) in;
void main(void) {
  float value = 1.0f;
  if(octreeBuffer[0] != 0){
    value = 0.5f;
  }
  imageStore(framebufferImage, ivec2(gl_GlobalInvocationID.xy), vec4(0, value, 0, 0));
}